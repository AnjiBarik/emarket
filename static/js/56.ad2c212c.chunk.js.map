{"version":3,"file":"static/js/56.ad2c212c.chunk.js","mappings":"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","sources":["components/utils/PromoBookSlider.js"],"sourcesContent":["import React, { useContext, useState, useEffect, useCallback, useMemo, useRef } from 'react';\r\nimport { BooksContext } from '../../BooksContext';\r\nimport { Link } from 'react-router-dom';\r\nimport useDebounce from '../hooks/useDebounce';\r\nimport './SpecificBookSlider.css';\r\nimport LazyImage from './LazyImage';\r\nimport getPublicUrl from '../functional/getPublicUrl';\r\n\r\nconst PromoBookSlider = ({ prompt }) => {\r\n  const { books, fieldState, setSpecificBook, promoBookSlider, theme } = useContext(BooksContext);\r\n  const [showLeftButton, setShowLeftButton] = useState(false);\r\n  const [showRightButton, setShowRightButton] = useState(false);\r\n  const [itemsPerPage, setItemsPerPage] = useState(7);\r\n  const scrollRef = useRef(null);\r\n\r\n  const weights = useMemo(() => ({\r\n    promo: 3,\r\n    BookList: 2,\r\n    Search: 2,\r\n    Filter: 2,\r\n  }), []);\r\n\r\n  const handleScroll = (direction) => {\r\n    if (scrollRef.current) {\r\n      const scrollAmount = scrollRef.current.clientWidth;\r\n      scrollRef.current.scrollBy({ left: direction === 'left' ? -scrollAmount : scrollAmount, behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  const updateItemsPerPage = () => {\r\n    const width = window.innerWidth;\r\n    if (width < 600) {\r\n      setItemsPerPage(7);\r\n    } else if (width < 1200) {\r\n      setItemsPerPage(12);\r\n    } else {\r\n      setItemsPerPage(20);\r\n    }\r\n  };\r\n\r\n  const debouncedUpdateItemsPerPage = useDebounce(updateItemsPerPage, 300);\r\n\r\n  useEffect(() => {\r\n    updateItemsPerPage();\r\n    window.addEventListener('resize', debouncedUpdateItemsPerPage);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', debouncedUpdateItemsPerPage);\r\n    };\r\n  }, [debouncedUpdateItemsPerPage]);\r\n\r\n  const promoBooks = useMemo(() => \r\n    books.filter(book => book.Tip.split(',').includes('promo') && book.Visibility !== '0')\r\n  , [books]);\r\n\r\n  const otherBooks = useMemo(() => \r\n    Object.keys(promoBookSlider)\r\n      .filter(key => key !== prompt)\r\n      .flatMap(key => promoBookSlider[key])\r\n      .map(id => books.find(book => book.id === id))\r\n      .filter(book => book && book.Visibility !== '0' && !book.Tip.split(',').includes('promo') && !promoBooks.includes(book))\r\n  , [books, promoBookSlider, prompt, promoBooks]);\r\n\r\n  const totalWeight = useMemo(() => \r\n    weights.promo + Object.keys(weights).filter(key => key !== prompt).reduce((sum, key) => sum + weights[key], 0)\r\n  , [weights, prompt]);\r\n\r\n  const promoCount = useMemo(() => Math.round((weights.promo / totalWeight) * itemsPerPage), [weights, totalWeight, itemsPerPage]);\r\n  const otherCounts = useMemo(() => Object.keys(weights)\r\n    .filter(key => key !== 'promo' && key !== prompt)\r\n    .reduce((acc, key) => ({ ...acc, [key]: Math.round((weights[key] / totalWeight) * itemsPerPage) }), {}), [weights, itemsPerPage, prompt, totalWeight]);\r\n\r\n  const bookIdsToDisplay = useMemo(() => {\r\n    const promoBookIds = promoBooks.slice(0, promoCount).map(book => book.id);\r\n    const otherBookIds = Object.keys(otherCounts).flatMap(key => {\r\n      const validBooks = otherBooks.filter(book => promoBookSlider[key].includes(book.id));\r\n      return validBooks.slice(0, otherCounts[key]).map(book => book.id);\r\n    });\r\n\r\n    const allIds = [...promoBookIds, ...otherBookIds];\r\n    const uniqueIds = Array.from(new Set(allIds));\r\n\r\n    return uniqueIds.slice(0, itemsPerPage);\r\n  }, [promoBooks, promoCount, otherCounts, otherBooks, itemsPerPage, promoBookSlider]);\r\n\r\n  const handleBookClick = (bookId) => {\r\n    setSpecificBook({ id: bookId });\r\n  };\r\n\r\n  const getImageSource = (book) => {\r\n    const currentImageIndex = 0;\r\n    const folder = 'img';\r\n  \r\n    const imagespublic = book.imageblockpublic && book.imageblockpublic !== \"\"\r\n        ? book.imageblockpublic.split(',').map(element => \r\n            getPublicUrl({ folder, filename: element })\r\n        )\r\n        : book.imageblock.split(',');\r\n   \r\n    return book.imagepublic && book.imagepublic !== \"\"\r\n        ? getPublicUrl({ folder, filename: book.imagepublic })\r\n        : book.image && book.image !== ''\r\n            ? book.image\r\n            : imagespublic[currentImageIndex];\r\n};  \r\n\r\n  const updateScrollButtonsVisibility = useCallback(() => {\r\n    if (scrollRef.current) {\r\n      const { scrollLeft, scrollWidth, clientWidth } = scrollRef.current;\r\n      setShowLeftButton(scrollLeft > 0);\r\n      setShowRightButton(scrollLeft < scrollWidth - clientWidth);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const currentScrollRef = scrollRef.current; // Copy current ref\r\n    updateScrollButtonsVisibility(); // Initial check\r\n    window.addEventListener('resize', updateScrollButtonsVisibility); // Add resize event listener\r\n\r\n    if (currentScrollRef) {\r\n      currentScrollRef.addEventListener('scroll', updateScrollButtonsVisibility); // Add scroll event listener\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', updateScrollButtonsVisibility); // Cleanup resize event listener\r\n      if (currentScrollRef) {\r\n        currentScrollRef.removeEventListener('scroll', updateScrollButtonsVisibility); // Cleanup scroll event listener\r\n      }\r\n    };\r\n  }, [updateScrollButtonsVisibility, bookIdsToDisplay]);\r\n\r\n  return (\r\n    <div className={`slider-wrapper ${theme}`}>\r\n      {showLeftButton && <button className=\"scroll-button-specific left\" onClick={() => handleScroll('left')}>{'<'}</button>}\r\n      <div className=\"slider-container-specific\" ref={scrollRef}>\r\n        {bookIdsToDisplay.map(bookId => {\r\n          const book = books.find(b => b.id === bookId);\r\n          return book && (\r\n            <Link className=\"book-card-specific\" to=\"/specificbook\" key={book.id} onClick={() => handleBookClick(book.id)}>\r\n              <LazyImage\r\n                src={getImageSource(book)}\r\n                alt={book.title}\r\n                className={'artmini-specific'}\r\n              />\r\n              {book.price && <b className='book-size'>{book.price}{fieldState.payment ? fieldState.payment : \"\"}</b>}\r\n              <div>\r\n                {book.title && (book.title.length >= 12 ? book.title.slice(0, 9) + '...' : book.title)}\r\n              </div>\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n      {showRightButton && <button className=\"scroll-button-specific right\" onClick={() => handleScroll('right')}>{'>'}</button>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PromoBookSlider;"],"names":["_ref","prompt","books","fieldState","setSpecificBook","promoBookSlider","theme","useContext","BooksContext","showLeftButton","setShowLeftButton","useState","showRightButton","setShowRightButton","itemsPerPage","setItemsPerPage","scrollRef","useRef","weights","useMemo","promo","BookList","Search","Filter","handleScroll","direction","current","scrollAmount","clientWidth","scrollBy","left","behavior","updateItemsPerPage","width","window","innerWidth","debouncedUpdateItemsPerPage","useDebounce","useEffect","addEventListener","removeEventListener","promoBooks","filter","book","Tip","split","includes","Visibility","otherBooks","Object","keys","key","flatMap","map","id","find","totalWeight","reduce","sum","promoCount","Math","round","otherCounts","acc","bookIdsToDisplay","allIds","slice","Array","from","Set","getImageSource","imagespublic","imageblockpublic","element","getPublicUrl","folder","filename","imageblock","imagepublic","image","updateScrollButtonsVisibility","useCallback","scrollLeft","scrollWidth","currentScrollRef","_jsxs","className","concat","children","_jsx","onClick","ref","bookId","b","Link","to","handleBookClick","LazyImage","src","alt","title","price","payment","length"],"sourceRoot":""}